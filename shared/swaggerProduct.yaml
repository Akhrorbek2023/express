openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0
  description: API for managing products
paths:
  /api/products:
    get:
      summary: Get all products
      parameters:
        - name: name
          in: query
          description: Filter by product name
          required: false
          schema:
            type: string
        - name: color
          in: query
          description: Filter by product color
          required: false
          schema:
            type: string
        - name: price
          in: query
          description: Filter by product price
          required: false
          schema:
            type: number
        - name: category
          in: query
          description: Filter by product category
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of products per page
          required: false
          schema:
            type: integer
      responses:
        200:
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/models/Product'
        404:
          description: Products not found
        500:
          description: Server error

    post:
      summary: Create a new product
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                color:
                  type: string
                price:
                  type: number
                quantity:
                  type: integer
                category:
                  type: string
                image:
                  type: string
              required:
                - name
                - color
                - price
                - quantity
                - category
      responses:
        201:
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/models/Product'
        400:
          description: Bad request
        500:
          description: Server error

  /api/products/{id}:
    get:
      summary: Get a single product by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the product to retrieve
          schema:
            type: string
      responses:
        200:
          description: A single product
          content:
            application/json:
              schema:
                $ref: '#/models/Product'
        404:
          description: Product not found
        500:
          description: Server error

    put:
      summary: Update a product by ID
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the product to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                color:
                  type: string
                price:
                  type: number
                quantity:
                  type: integer
                category:
                  type: string
              required:
                - name
                - color
                - price
                - quantity
                - category
      responses:
        200:
          description: Updated product
          content:
            application/json:
              schema:
                $ref: '#/models/Product'
        404:
          description: Product not found
        400:
          description: Bad request
        500:
          description: Server error

    delete:
      summary: Delete a product by ID
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the product to delete
          schema:
            type: string
      responses:
        200:
          description: Product deleted successfully
        404:
          description: Product not found
        500:
          description: Server error

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the product
        name:
          type: string
          description: The name of the product
        color:
          type: string
          description: The color of the product
        price:
          type: number
          description: The price of the product
        quantity:
          type: integer
          description: The quantity of the product
        category:
          type: string
          description: The category of the product
        image:
          type: string
          description: The URL of the product image
      required:
        - name
        - color
        - price
        - quantity
        - category
